{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","App.module.css","components/Modal/Modal.module.css","components/IconButton/IconButton.module.css","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/Modal/Modal.js","components/IconButton/IconButton.js","views/PhonebookViews.js"],"names":["module","exports","ContactList","contacts","useSelector","getVisibleContacts","dispatch","useDispatch","className","s","list","map","id","name","number","completed","classNames","item","type","checkbox","checked","text","pug","onClick","deleteContact","ContactForm","onSave","useState","setName","setNumber","handleChange","event","target","value","contactEditor","onSubmit","e","preventDefault","addContact","label","onChange","textarea","pattern","title","required","button","Filter","getFilter","changeFilter","modalRoot","document","querySelector","Modal","handleKeyDown","code","props","onClose","handleBackdropClick","currentTarget","window","addEventListener","this","removeEventListener","createPortal","backdrop","content","children","Component","IconButton","otherProps","block","span","PhonebookViews","totalContactsCount","getContactsLength","isLoading","getLoading","isModalOpen","setIsModalOpen","togleModal","state","useEffect","fetchContacts","Container","mainTitle","Spinner"],"mappings":"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","file":"static/js/phonebook_page.0f581954.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__21Hjg\",\"item\":\"ContactList_item__1DvPe\",\"completed\":\"ContactList_completed__2CyT8\",\"pug\":\"ContactList_pug__uuMGA\",\"text\":\"ContactList_text__2hKho\",\"checkbox\":\"ContactList_checkbox__3kNWX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactEditor\":\"ContactForm_contactEditor__2ukRs\",\"textarea\":\"ContactForm_textarea__FzBt8\",\"label\":\"ContactForm_label__1eZ_0\",\"button\":\"ContactForm_button__3odSO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__11B3k\",\"text\":\"Filter_text__2S3NM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__D76nh\",\"mainTitle\":\"App_mainTitle__7gW_H\",\"text\":\"App_text__3bIPF\",\"block\":\"App_block__11o8v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__3HruW\",\"content\":\"Modal_content__23eJs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"IconButton_button__1NSlk\",\"block\":\"IconButton_block__3hxSE\",\"span\":\"IconButton_span__4SQ_M\"};","import React from 'react';\nimport classNames from 'classnames';\nimport s from './ContactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  deleteContact,\n  // toggleCompleted,\n  getVisibleContacts,\n} from '../../redux/phonebook';\n\nconst ContactList = () => {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number, completed }) => (\n        <li\n          key={id}\n          className={classNames(s.item, { [s.completed]: completed })}\n        >\n          <input\n            type=\"checkbox\"\n            className={s.checkbox}\n            checked={completed}\n            // onChange={() =>\n            //   dispatch(toggleCompleted({ id, completed: !completed }))\n            // }\n          />\n          <p className={s.text}>\n            {name}: {number}\n          </p>\n          <button\n            type=\"button\"\n            className={s.pug}\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n\n// ===== Без селекторов =====\n\n// const getVisibleContacts = (allContacts, filter) => {\n//   const normalizedFilter = filter.toLowerCase().trim();\n\n//   return allContacts.filter(contact =>\n//     contact.name.toLowerCase().includes(normalizedFilter),\n//   );\n// };\n\n// const mapStateToProps = state => ({\n//   contacts: getVisibleContacts(state),\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   onDeleteContact: contactId => dispatch(deleteContact(contactId)),\n// });\n\n// export default connect(null, mapDispatchToProps)(ContactList);\n","import { useState } from 'react';\nimport { addContact } from '../../redux/phonebook';\nimport { useDispatch } from 'react-redux';\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm({ onSave }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(addContact(name, number));\n    onSave('');\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.contactEditor} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          value={name}\n          onChange={handleChange}\n          className={s.textarea}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          value={number}\n          onChange={handleChange}\n          className={s.textarea}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className={s.button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\n// ===== With connect ======\n\n// ContactForm.propTypes = {\n//   addContact: PropTypes.func.isRequired,\n// };\n\n// const mapDispatchToProps = dispatch => ({\n//   addContact: (name, number) => dispatch(addContact(name, number)),\n// });\n\n// export default connect(null, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport s from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter, getFilter } from '../../redux/phonebook';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label className={s.label}>\n      Find contacts by name:\n      <input\n        type=\"text\"\n        className={s.text}\n        value={value}\n        onChange={e => dispatch(changeFilter(e.target.value))}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport s from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n    return;\r\n  };\r\n\r\n  handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onClose();\r\n    }\r\n    return;\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className={s.backdrop} onClick={this.handleBackdropClick}>\r\n        <div className={s.content}>{this.props.children}</div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport s from './IconButton.module.css';\r\n\r\nexport default function IconButton({\r\n  children = null,\r\n  onClick = () => null,\r\n  ...otherProps\r\n}) {\r\n  return (\r\n    <div className={s.block}>\r\n      <span className={s.span}> Add: </span>\r\n      <button\r\n        type=\"button\"\r\n        className={s.button}\r\n        onClick={onClick}\r\n        {...otherProps}\r\n      >\r\n        {children}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nIconButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n  children: PropTypes.node,\r\n  'aria-label': PropTypes.string.isRequired,\r\n};\r\n","import { useSelector, useDispatch } from 'react-redux';\nimport React, { useEffect, useState } from 'react';\nimport ContactList from '../components/ContactList';\nimport ContactForm from '../components/ContactForm';\nimport Container from '../components/Container';\nimport Filter from '../components/Filter';\nimport s from '../App.module.css';\nimport Spinner from '../components/Spinner/Spinner';\nimport Modal from '../components/Modal';\nimport { AiOutlinePlusCircle } from 'react-icons/ai';\nimport {\n  fetchContacts,\n  getLoading,\n  getContactsLength,\n  // getCompleteContactsCount,\n} from '../redux/phonebook';\nimport IconButton from '../components/IconButton';\n\nfunction PhonebookViews() {\n  const totalContactsCount = useSelector(getContactsLength);\n  // const completeContactsCount = useSelector(getCompleteContactsCount);\n  const isLoading = useSelector(getLoading);\n  const dispatch = useDispatch();\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const togleModal = () => setIsModalOpen(state => !state);\n\n  useEffect(() => dispatch(fetchContacts()), [dispatch]);\n\n  return (\n    <>\n      <Container>\n        <div className={s.block}>\n          <Filter />\n          <IconButton onClick={togleModal} aria-label=\"add contact\">\n            <AiOutlinePlusCircle className=\"iconButton\" />\n          </IconButton>\n        </div>\n        <p className={s.text}>Total contacts: {totalContactsCount}</p>\n        <h3 className={s.mainTitle}>Contacts:</h3>\n        {isLoading && <Spinner />}\n        {isModalOpen && (\n          <Modal onClose={togleModal}>\n            <ContactForm onSave={togleModal} />\n          </Modal>\n        )}\n        <ContactList />\n      </Container>\n    </>\n  );\n}\n\nexport default PhonebookViews;\n"],"sourceRoot":""}