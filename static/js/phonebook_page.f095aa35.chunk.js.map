{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/classnames/index.js","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","App.module.css","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","views/PhonebookViews.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","hasOwn","hasOwnProperty","classNames","classes","arguments","arg","argType","inner","apply","toString","prototype","key","call","join","module","exports","default","ContactList","contacts","useSelector","getVisibleContacts","dispatch","useDispatch","className","s","list","map","id","name","number","completed","item","type","checkbox","checked","onChange","toggleCompleted","text","pug","onClick","deleteContact","ContactForm","useState","setName","setNumber","handleChange","event","target","contactEditor","onSubmit","e","preventDefault","addContact","label","textarea","pattern","title","required","button","Filter","getFilter","changeFilter","PhonebookViews","totalContactsCount","getContactsLength","completeContactsCount","getCompleteContactsCount","isLoading","getLoading","useEffect","fetchContacts","container","mainTitle","Spinner"],"mappings":"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","file":"static/js/phonebook_page.f095aa35.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__21Hjg\",\"item\":\"ContactList_item__1DvPe\",\"completed\":\"ContactList_completed__2CyT8\",\"pug\":\"ContactList_pug__uuMGA\",\"text\":\"ContactList_text__2hKho\",\"checkbox\":\"ContactList_checkbox__3kNWX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactEditor\":\"ContactForm_contactEditor__2ukRs\",\"textarea\":\"ContactForm_textarea__FzBt8\",\"label\":\"ContactForm_label__1eZ_0\",\"button\":\"ContactForm_button__3odSO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__11B3k\",\"text\":\"Filter_text__2S3NM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__D76nh\",\"mainTitle\":\"App_mainTitle__7gW_H\",\"text\":\"App_text__3bIPF\"};","import React from 'react';\nimport classNames from 'classnames';\nimport s from './ContactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  deleteContact,\n  toggleCompleted,\n  getVisibleContacts,\n} from '../../redux/phonebook';\n\nconst ContactList = () => {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number, completed }) => (\n        <li\n          key={id}\n          className={classNames(s.item, { [s.completed]: completed })}\n        >\n          <input\n            type=\"checkbox\"\n            className={s.checkbox}\n            checked={completed}\n            onChange={() =>\n              dispatch(toggleCompleted({ id, completed: !completed }))\n            }\n          />\n          <p className={s.text}>\n            {name}: {number}\n          </p>\n          <button\n            type=\"button\"\n            className={s.pug}\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n\n// ===== Без селекторов =====\n\n// const getVisibleContacts = (allContacts, filter) => {\n//   const normalizedFilter = filter.toLowerCase().trim();\n\n//   return allContacts.filter(contact =>\n//     contact.name.toLowerCase().includes(normalizedFilter),\n//   );\n// };\n\n// const mapStateToProps = state => ({\n//   contacts: getVisibleContacts(state),\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   onDeleteContact: contactId => dispatch(deleteContact(contactId)),\n// });\n\n// export default connect(null, mapDispatchToProps)(ContactList);\n","import { useState } from 'react';\nimport { addContact } from '../../redux/phonebook';\nimport { useDispatch } from 'react-redux';\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(addContact(name, number));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.contactEditor} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          value={name}\n          onChange={handleChange}\n          className={s.textarea}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          value={number}\n          onChange={handleChange}\n          className={s.textarea}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className={s.button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\n// ===== With connect ======\n\n// ContactForm.propTypes = {\n//   addContact: PropTypes.func.isRequired,\n// };\n\n// const mapDispatchToProps = dispatch => ({\n//   addContact: (name, number) => dispatch(addContact(name, number)),\n// });\n\n// export default connect(null, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport s from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter, getFilter } from '../../redux/phonebook';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        className={s.text}\n        value={value}\n        onChange={e => dispatch(changeFilter(e.target.value))}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import { useSelector, useDispatch } from 'react-redux';\nimport React, { useEffect } from 'react';\nimport ContactList from '../components/ContactList';\nimport ContactForm from '../components/ContactForm';\nimport Filter from '../components/Filter';\nimport s from '../App.module.css';\nimport Spinner from '../components/Spinner/Spinner';\nimport {\n  fetchContacts,\n  getLoading,\n  getContactsLength,\n  getCompleteContactsCount,\n} from '../redux/phonebook';\n\nfunction PhonebookViews() {\n  const totalContactsCount = useSelector(getContactsLength);\n  const completeContactsCount = useSelector(getCompleteContactsCount);\n  const isLoading = useSelector(getLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(fetchContacts()), [dispatch]);\n\n  return (\n    <div className={s.container}>\n      <h1 className={s.mainTitle}>Phonebook</h1>\n      <p className={s.text}>All contacts: {totalContactsCount}</p>\n      <p className={s.text}>Number of selected: {completeContactsCount} </p>\n\n      <ContactForm />\n      <h2 className={s.mainTitle}>Contacts</h2>\n      <Filter />\n      {isLoading && <Spinner />}\n      <ContactList />\n    </div>\n  );\n}\n\nexport default PhonebookViews;\n"],"sourceRoot":""}