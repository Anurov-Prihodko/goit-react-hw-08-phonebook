{"version":3,"sources":["components/Navigation.js","components/UserMenu/default-avatar.png","components/UserMenu/UserMenu.js","components/AuthNav.js","components/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","components/Container/Container.js","App.js","redux/store.js","index.js","redux/phonebook/contacts-selectors.js","redux/phonebook/contacts-actions.js","redux/phonebook/contacts-operations.js","redux/phonebook/contacts-reducer.js","components/Spinner/Spinner.js","components/Container/Container.module.css","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/auth/auth-slice.js"],"names":["styles","link","display","textDecoration","padding","fontWeight","color","activeLink","Navigation","isLoggedIn","useSelector","authSelectors","getIsLoggedIn","to","exact","style","activeStyle","container","alignItems","avatar","marginRight","name","UserMenu","dispatch","useDispatch","getUsername","src","defaultAvatar","alt","width","type","onClick","authOperations","logOut","AuthNav","header","justifyContent","borderBottom","AppBar","PrivateRoute","children","redirectTo","routeProps","isLogedin","PublicRoute","restricted","shouldRedirect","Container","className","PhonebookViews","lazy","HomeView","RegisterView","LoginView","App","isFetching","getFetching","useEffect","fetchCurrentUser","fallback","Spinner","path","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById","getAllConatcts","state","note","getLoading","getContactsLength","length","getCompleteContactsCount","createSelector","allContacts","reduce","total","contact","completed","getFilter","filter","getVisibleContacts","normalizedFilter","toLowerCase","trim","includes","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","toggleCompletedRequest","toggleCompletedSuccess","toggleCompletedError","changeFilter","fetchContacts","a","axios","get","data","addContact","number","post","then","catch","error","deleteContact","contactId","delete","toggleCompleted","id","update","patch","createReducer","_","payload","find","alert","map","combineReducers","height","module","exports","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","logIn","operations","thunkAPI","getState","persistedToken","rejectWithValue","user","authSlice","createSlice","initialState","email","extraReducers","fulfilled","action","pending","rejected"],"mappings":"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","file":"static/js/main.0f2f72ad.chunk.js","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { authSelectors } from '../redux/auth';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nconst Navigation = () => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n\n  return (\n    <nav>\n      <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\n        Main\n      </NavLink>\n\n      {isLoggedIn ? (\n        <NavLink\n          to=\"/contacts\"\n          exact\n          style={styles.link}\n          activeStyle={styles.activeLink}\n        >\n          Phonebook\n        </NavLink>\n      ) : null}\n    </nav>\n  );\n};\n\nexport default Navigation;\n","export default __webpack_public_path__ + \"static/media/default-avatar.dca40665.png\";","import { useDispatch, useSelector } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\nimport defaultAvatar from './default-avatar.png';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  avatar: {\n    marginRight: 7,\n  },\n  name: {\n    fontWeight: 700,\n    marginRight: 12,\n  },\n};\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUsername);\n\n  return (\n    <div style={styles.container}>\n      <img src={defaultAvatar} alt=\"\" width=\"32\" style={styles.avatar} />\n      <span style={styles.name}>Welcome, {name}</span>\n      <button type=\"button\" onClick={() => dispatch(authOperations.logOut())}>\n        Log out\n      </button>\n    </div>\n  );\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nexport default function AuthNav() {\n  return (\n    <div>\n      <NavLink\n        to=\"/register\"\n        exact\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        Signup\n      </NavLink>\n      <NavLink\n        to=\"/login\"\n        exact\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        Login\n      </NavLink>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport Navigation from './Navigation';\nimport UserMenu from './UserMenu';\nimport AuthNav from './AuthNav';\nimport { authSelectors } from '../redux/auth';\n\nconst styles = {\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderBottom: '1px solid #2A363B',\n  },\n};\n\nexport default function AppBar() {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <header style={styles.header}>\n      <Navigation />\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authSelectors } from '../redux/auth';\n\nexport default function PrivateRoute({\n  children,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  const isLogedin = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <Route {...routeProps}>\n      {isLogedin ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authSelectors } from '../redux/auth';\n\nexport default function PublicRoute({\n  children,\n  restricted = false,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const shouldRedirect = isLoggedIn && restricted;\n  //   console.log('shouldRedirect: ', shouldRedirect);\n  return (\n    <Route {...routeProps}>\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\n    </Route>\n  );\n}\n","import styles from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={styles.container}>{children}</div>;\n}\n","import { useEffect, Suspense, lazy } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Switch } from 'react-router-dom';\nimport AppBar from './components/AppBar';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport Spinner from './components/Spinner/Spinner';\nimport Container from './components/Container';\nimport { authOperations, authSelectors } from './redux/auth';\n\nconst PhonebookViews = lazy(() =>\n  import('./views/PhonebookViews' /* webpackChunkName: \"phonebook_page\" */),\n);\nconst HomeView = lazy(() =>\n  import('./views/HomeView' /* webpackChunkName: \"home_page\" */),\n);\nconst RegisterView = lazy(() =>\n  import('./views/RegisterView' /* webpackChunkName: \"register_page\" */),\n);\nconst LoginView = lazy(() =>\n  import('./views/LoginView' /* webpackChunkName: \"login_page\" */),\n);\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const isFetching = useSelector(authSelectors.getFetching);\n\n  // console.log(isFetching);\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    !isFetching && (\n      <Container>\n        <AppBar />\n\n        <Switch>\n          <Suspense fallback={<Spinner />}>\n            <PublicRoute exact path=\"/\">\n              <HomeView />\n            </PublicRoute>\n            <PublicRoute\n              exact\n              path=\"/register\"\n              restricted\n              redirectTo=\"/contacts\"\n            >\n              <RegisterView />\n            </PublicRoute>\n            <PublicRoute exact path=\"/login\" restricted redirectTo=\"/contacts\">\n              <LoginView />\n            </PublicRoute>\n            <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n              <PhonebookViews />\n            </PrivateRoute>\n          </Suspense>\n        </Switch>\n      </Container>\n    )\n  );\n}\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n// import logger from 'redux-logger';\nimport { contactsReducer } from './phonebook';\nimport { authReducer } from './auth';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  // logger,\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\nimport { store, persistor } from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\n// import Loader from 'react-loader-spinner';\n// import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate\n        loading={null}\n        // loading={\n        //   <Loader type=\"Audio\" color=\"#ffed4f\" height={100} width={100} />\n        // }\n        persistor={persistor}\n      >\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getAllConatcts = state => state.contacts.note;\n\n// ===== used in App.js =====\nexport const getLoading = state => state.contacts.loading;\nexport const getContactsLength = state => state.contacts.note.length;\n\nexport const getCompleteContactsCount = createSelector(\n  [getAllConatcts],\n  allContacts => {\n    return allContacts.reduce(\n      (total, contact) => (contact.completed ? total + 1 : total),\n      0,\n    );\n  },\n);\n\n// ===== used in Filter.js =====\nexport const getFilter = state => state.contacts.filter;\n\n// ===== used in ContactList.js =====\nexport const getVisibleContacts = createSelector(\n  [getAllConatcts, getFilter],\n\n  (allContacts, filter) => {\n    const normalizedFilter = filter.toLowerCase().trim();\n\n    return allContacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\n// ===== Без мемоизации =====\n// export const getVisibleContacts = state => {\n//   const allContacts = getAllConatcts(state);\n//   const filter = getFilter(state);\n//   const normalizedFilter = filter.toLowerCase().trim();\n\n//   return allContacts.filter(({ name }) =>\n//     name.toLowerCase().includes(normalizedFilter),\n//   );\n// };\n","import { createAction } from '@reduxjs/toolkit';\n\nconst fetchContactsRequest = createAction('contacts/fetchContactsRequest');\nconst fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\nconst fetchContactsError = createAction('contacts/fetchContactsError');\n\nconst addContactRequest = createAction('contacts/addContactRequest');\nconst addContactSuccess = createAction('contacts/addContactSuccess');\nconst addContactError = createAction('contacts/addContactError');\n\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nconst deleteContactError = createAction('contacts/deleteContactError');\n\nconst toggleCompletedRequest = createAction('contacts/toggleCompletedRequest');\nconst toggleCompletedSuccess = createAction('contacts/toggleCompletedSuccess');\nconst toggleCompletedError = createAction('contacts/toggleCompletedError');\n\nconst changeFilter = createAction('phonebook/changeFilter');\n\nexport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n  toggleCompletedRequest,\n  toggleCompletedSuccess,\n  toggleCompletedError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n};\n\n// ===== Без json-server =====\n\n// const addContact = createAction('phonebook/add', (name, number) => ({\n//   payload: {\n//     id: shortid.generate(),\n//     name,\n//     number,\n//     completed: false,\n//   },\n// }));\n\n// const deleteContact = createAction('phonebook/delete');\n// const toggleCompleted = createAction('phonebook/toggleCompleted');\n\n// ===== БЕЗ БИБЛИОТЕКИ TOOLKIT =====\n\n// const addContact = (name, number) => ({\n//   type: ADD,\n//   payload: {\n//     id: shortid.generate(),\n//     name,\n//     number,\n//     completed: false,\n//   },\n// });\n\n// const deleteContact = contactId => ({\n//   type: DELETE,\n//   payload: contactId,\n// });\n\n// const changeFilter = value => ({\n//   type: CHANGE_FILTER,\n//   payload: value,\n// });\n\n// const toggleCompleted = contactId => ({\n//   type: TOGGLE_COMPLETED,\n//   payload: contactId,\n// });\n","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  toggleCompletedRequest,\n  toggleCompletedSuccess,\n  toggleCompletedError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n} from './contacts-actions';\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error));\n  }\n\n  // axios\n  //   .get('/mainState')\n  //   .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n  //   .catch(error => dispatch(fetchContactsError(error)));\n};\n\nconst addContact = (name, number) => dispatch => {\n  const note = {\n    name,\n    number,\n    completed: false,\n  };\n\n  dispatch(addContactRequest());\n\n  axios\n    .post('/contacts', note)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error)));\n};\n\nconst deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n\nconst toggleCompleted =\n  ({ id, completed }) =>\n  dispatch => {\n    const update = { completed };\n\n    dispatch(toggleCompletedRequest());\n\n    axios\n      .patch(`/contacts/${id}`, update)\n      .then(({ data }) => dispatch(toggleCompletedSuccess(data)))\n      .catch(error => dispatch(toggleCompletedError(error)));\n  };\n\nexport { addContact, deleteContact, toggleCompleted, fetchContacts };\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n  toggleCompletedRequest,\n  toggleCompletedSuccess,\n  toggleCompletedError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n} from './contacts-actions';\n\nconst addContactReducer = (state, { payload }) => {\n  if (state.find(({ name }) => name === payload.name)) {\n    alert(`${payload.name} is already in contacts.`);\n    return [...state];\n  }\n  return [...state, payload];\n};\n\nconst deleteContactReducer = (state, { payload }) =>\n  state.filter(({ id }) => id !== payload);\n\nconst toggleCompletedReducer = (state, { payload }) =>\n  state.map(contact => (contact.id === payload.id ? payload : contact));\n\nconst note = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: addContactReducer,\n  [deleteContactSuccess]: deleteContactReducer,\n  [toggleCompletedSuccess]: toggleCompletedReducer,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n  [toggleCompletedRequest]: () => true,\n  [toggleCompletedSuccess]: () => false,\n  [toggleCompletedError]: () => false,\n});\n\nexport default combineReducers({\n  note,\n  filter,\n  loading,\n});\n","import Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nexport default function Spinner() {\n  return (\n    <div className=\"spinner\">\n      <Loader type=\"Audio\" color=\"#ffed4f\" height={60} width={60} />\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3i19u\"};","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\n/*\n * POST @ /users/signup\n * body: { name, email, password }\n * После успешной регистрации добавляем токен в HTTP-заголовок\n */\nconst register = createAsyncThunk('auth/register', async credentials => {\n  // console.log('credentials: ', credentials);\n  try {\n    const { data } = await axios.post('/users/signup', credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    // new Error(error);\n    alert(`Oops... Something went wrong: ${error}`);\n  }\n});\n\n/*\n * POST @ /users/login\n * body: { email, password }\n * После успешного логина добавляем токен в HTTP-заголовок\n */\nconst logIn = createAsyncThunk('auth/login', async credentials => {\n  try {\n    const { data } = await axios.post('/users/login', credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    // new Error(error);\n    alert(`Oops... Something went wrong: ${error}`);\n  }\n});\n\n/*\n * POST @ /users/logout\n * headers: Authorization: Bearer token\n * После успешного логаута, удаляем токен из HTTP-заголовка\n */\nconst logOut = createAsyncThunk('auth/logout', async () => {\n  try {\n    await axios.post('/users/logout');\n    token.unset();\n  } catch (error) {\n    // new Error(error);\n    alert(`Oops... Something went wrong: ${error}`);\n  }\n});\n\n/*\n * GET @ /users/current\n * headers:\n *    Authorization: Bearer token\n *\n * 1. Забираем токен из стейта через getState()\n * 2. Если токена нет, выходим не выполняя никаких операций\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\n */\nconst fetchCurrentUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n    // console.log(token);\n\n    if (!persistedToken) {\n      return thunkAPI.rejectWithValue();\n    }\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get('/users/current');\n      // console.log(data);\n      return data;\n    } catch (error) {\n      // new Error(error);\n      alert(`Oops... Something went wrong: ${error}`);\n    }\n  },\n);\n\nconst operations = {\n  register,\n  logOut,\n  logIn,\n  fetchCurrentUser,\n};\n\nexport default operations;\n","const getIsLoggedIn = state => state.auth.isLoggedIn;\n\nconst getUsername = state => state.auth.user.name;\n\nconst getFetching = state => state.auth.isFetching;\n\nconst authSelectors = {\n  getIsLoggedIn,\n  getUsername,\n  getFetching,\n};\nexport default authSelectors;\n","import { createSlice } from '@reduxjs/toolkit';\nimport authOperations from './auth-operations';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isFetching: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logOut.fulfilled](state, _) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [authOperations.fetchCurrentUser.pending](state, _) {\n      state.isFetching = true;\n    },\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\n      // console.log(action);\n      state.user = action.payload;\n      state.isLoggedIn = true;\n      state.isFetching = false;\n    },\n    [authOperations.fetchCurrentUser.rejected](state, _) {\n      state.isFetching = false;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n"],"sourceRoot":""}